!function(n,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports["road-dropdown"]=t():n["road-dropdown"]=t()}(window,function(){return function(n){var t={};function e(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return n[o].call(i.exports,i,i.exports,e),i.l=!0,i.exports}return e.m=n,e.c=t,e.d=function(n,t,o){e.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:o})},e.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.t=function(n,t){if(1&t&&(n=e(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var o=Object.create(null);if(e.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var i in n)e.d(o,i,function(t){return n[t]}.bind(null,i));return o},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,"a",t),t},e.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},e.p="",e(e.s=0)}([function(n,t,e){"use strict";e.r(t);var o="\n  :host {\n    font-family: sans-serif;\n  }\n";const i="#ffffff",r="#51a7eb",s="81,167,235",d="#177AC9",a="#a1a1a1",l="161,161,161",p="#000000",b="0,0,0";var c=`\n  .basic-atom {\n    box-sizing: border-box;\n    position: relative;\n    border: 1px solid ${a};\n    background: ${i};\n    box-shadow: 0 2px 4px 0 rgba(${b}, 0.05), 0 2px 8px 0 rgba(${l}, 0.4);\n    color: ${"#363636"};\n    cursor: pointer;\n  }\n\n  .basic-atom:focus {\n    border: 1px solid ${r};\n    box-shadow: 0 2px 4px 0 rgba(${l}, 0.4), 0 2px 8px 0 rgba(${b}, 0.05), inset 0 0 0 1px ${r};\n  }\n\n  .basic-atom.selected {\n    border-color: ${r};\n    background: rgba(185,220,247, 0.4);\n    box-shadow: 0 2px 8px 0 rgba(${s}, 0.25);\n    color: #285172;\n  }\n\n  .basic-atom.selected:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 1;\n    box-shadow: 0 2px 8px 0 rgba(${s}, 0.25);\n  }\n\n  .basic-atom.selected:hover,\n  .basic-atom.selected:focus {\n    box-shadow: 0 2px 8px 0 rgba(${s}, 0.25);\n  }\n\n  .basic-atom:hover {\n    border-color: ${r};\n    color: ${d};\n  }\n\n  .basic-atom:active {\n    border: 1px solid ${r};\n    background: rgba(${s}, 0.1);\n    color: ${d};\n    box-shadow: none;\n  }\n\n  .basic-atom:disabled {\n    border-color: rgba(${l}, 0.25);\n    box-shadow: none;\n    color: rgba(${"54,54,54"}, 0.75);\n    font-weight: normal;\n    pointer-events: none;\n\n  }\n\n  .basic-atom:disabled .icon {\n    color: #9a9a9a;\n  }\n`;const h=document.createElement("template");h.innerHTML=`\n  <style>\n    ${o}\n\n    ${c}\n\n   .button-container {\n      padding: 8px;\n    }\n\n    .button-container.icon-btn {\n      padding: 8px 2px;\n    }\n\n    button {\n      display: block;\n      overflow: hidden;\n      position: relative;\n      padding: 0 16px;\n      font-size: 16px;\n      font-weight: bold;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      cursor: pointer;\n      outline: none;\n      width: 100%;\n      height: 40px;\n    }\n\n    button.icon {\n      display: none;\n      width: auto;\n      position: relative;\n      margin-right: 8px;\n      font-size: 36px;\n    }\n\n    button.icon-label-btn {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n\n    button.icon-label-btn .icon {\n      display: block;\n    }\n\n    button.icon-btn {\n      padding: 0;\n      font-size: 0;\n      width: 50px;\n      min-width: 50px;\n    }\n\n    button.icon-btn .icon {\n      display: block;\n      margin: 0;\n    }\n  </style>\n\n  <div class="container">\n    <button class="basic-atom">Label</button>\n  </div>\n`;window.customElements.define("road-button",class extends HTMLElement{constructor(){super(),this._shadowRoot=this.attachShadow({mode:"open"}),this._shadowRoot.appendChild(h.content.cloneNode(!0)),this.$container=this._shadowRoot.querySelector(".container"),this.$button=this._shadowRoot.querySelector("button"),this.$button.addEventListener("click",()=>{this.dispatchEvent(new CustomEvent("onClick",{detail:"Hello from within the Custom Element"}))})}connectedCallback(){this.hasAttribute("as-atom")&&this.updateAsAtom()}updateAsAtom(){this.$container.style.padding="0px"}get label(){return this.getAttribute("label")}set label(n){this.setAttribute("label",n)}static get observedAttributes(){return["label"]}attributeChangedCallback(n,t,e){this.render()}render(){this.$button.innerHTML=this.label}});const u=document.createElement("template");u.innerHTML=`\n  <style>\n    ${o}\n\n    ${c}\n\n    .dropdown {\n      box-sizing: border-box;\n      padding: 3px 8px 8px;\n      cursor: pointer;\n    }\n\n    .dropdown.open .dropdown-list {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .label {\n      display: block;\n      margin-bottom: 5px;\n      color: ${p};\n      font-size: 16px;\n      font-weight: normal;\n      line-height: 16px;\n    }\n\n    button {\n      width: 100%;\n      position: relative;\n      padding-right: 45px;\n      padding-left: 8px;\n      font-size: 16px;\n      font-weight: 600;\n      text-align: left;\n      white-space: nowrap;\n    }\n\n    .dropdown-list-container {\n      position: relative;\n    }\n\n    .dropdown-list {\n      position: absolute;\n      width: 100%;\n      display: none;\n      max-height: 192px;\n      overflow-y: auto;\n      margin: 4px 0 0;\n      padding: 0;\n      background-color: ${i};\n      border: 1px solid ${a};\n      box-shadow: 0 2px 4px 0 rgba(${b}, 0.05), 0 2px 8px 0 rgba(${l}, 0.4);\n      list-style: none;\n    }\n\n    .dropdown-list li {\n      display: flex;\n      align-items: center;\n      margin: 4px 0;\n      padding: 0 7px;\n      border-right: none;\n      border-left: none;\n      border-width: 0;\n      font-size: 16px;\n      flex-shrink: 0;\n      height: 40px;\n    }\n\n    .dropdown-list li:not(.selected) {\n      box-shadow: none;\n    }\n\n    .dropdown-list li.selected {\n      font-weight: 600;\n      z-index: 100;\n    }\n\n    .dropdown-list li:active,\n    .dropdown-list li:hover,\n    .dropdown-list li.selected {\n      border-right: none;\n      border-left: none;\n      border-width: 1px;\n    }\n\n    .dropdown-list li:focus {\n      border-width: 2px;\n    }\n\n    .dropdown-list li:disabled {\n      color: rgba(${b}, 0.6);\n      font-weight: 300;\n    }\n  </style>\n\n  <div class="dropdown">\n    <span class="label">Label</span>\n\n    <road-button as-atom>Content</road-button>\n\n    <div class="dropdown-list-container">\n      <ul class="dropdown-list"></ul>\n    </div>\n  </div>\n`;window.customElements.define("road-dropdown",class extends HTMLElement{constructor(){super(),this._sR=this.attachShadow({mode:"open"}),this._sR.appendChild(u.content.cloneNode(!0)),this.open=!1,this.$label=this._sR.querySelector(".label"),this.$button=this._sR.querySelector("road-button"),this.$dropdown=this._sR.querySelector(".dropdown"),this.$dropdownList=this._sR.querySelector(".dropdown-list"),this.$button.addEventListener("onClick",this.toggleOpen.bind(this))}static get observedAttributes(){return["label","option","options"]}get label(){return this.getAttribute("label")}set label(n){this.setAttribute("label",n)}get option(){return this.getAttribute("option")}set option(n){this.setAttribute("option",n)}get options(){return JSON.parse(this.getAttribute("options"))}set options(n){this.setAttribute("options",JSON.stringify(n))}toggleOpen(n){this.open=!this.open,this.open?this.$dropdown.classList.add("open"):this.$dropdown.classList.remove("open")}static get observedAttributes(){return["label","option","options"]}attributeChangedCallback(n,t,e){this.render()}render(){this.$label.innerHTML=this.label,this.options&&this.$button.setAttribute("label",this.options[this.option].label),this.$dropdownList.innerHTML="",Object.keys(this.options||{}).forEach(n=>{let t=this.options[n],e=document.createElement("li");e.innerHTML=t.label,e.classList.add("basic-atom"),this.option&&this.option===n&&e.classList.add("selected"),e.addEventListener("click",()=>{this.option=n,this.toggleOpen(),this.dispatchEvent(new CustomEvent("onChange",{detail:n})),this.render()}),this.$dropdownList.appendChild(e)})}})}])});
//# sourceMappingURL=bundle.js.map